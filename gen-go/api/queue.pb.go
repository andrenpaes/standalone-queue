// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: api/queue.proto

package queue

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EventMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName       string               `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	CreatingOwner   string               `protobuf:"bytes,2,opt,name=creating_owner,json=creatingOwner,proto3" json:"creating_owner,omitempty"`
	EventJson       string               `protobuf:"bytes,3,opt,name=event_json,json=eventJson,proto3" json:"event_json,omitempty"`
	UserToken       string               `protobuf:"bytes,4,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	FutureUserToken string               `protobuf:"bytes,5,opt,name=future_user_token,json=futureUserToken,proto3" json:"future_user_token,omitempty"`
	EffectiveDate   *timestamp.Timestamp `protobuf:"bytes,6,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
	SearchKey1      int64                `protobuf:"varint,7,opt,name=search_key1,json=searchKey1,proto3" json:"search_key1,omitempty"`
	SearchKey2      int64                `protobuf:"varint,8,opt,name=search_key2,json=searchKey2,proto3" json:"search_key2,omitempty"`
}

func (x *EventMsg) Reset() {
	*x = EventMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_queue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMsg) ProtoMessage() {}

func (x *EventMsg) ProtoReflect() protoreflect.Message {
	mi := &file_api_queue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMsg.ProtoReflect.Descriptor instead.
func (*EventMsg) Descriptor() ([]byte, []int) {
	return file_api_queue_proto_rawDescGZIP(), []int{0}
}

func (x *EventMsg) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *EventMsg) GetCreatingOwner() string {
	if x != nil {
		return x.CreatingOwner
	}
	return ""
}

func (x *EventMsg) GetEventJson() string {
	if x != nil {
		return x.EventJson
	}
	return ""
}

func (x *EventMsg) GetUserToken() string {
	if x != nil {
		return x.UserToken
	}
	return ""
}

func (x *EventMsg) GetFutureUserToken() string {
	if x != nil {
		return x.FutureUserToken
	}
	return ""
}

func (x *EventMsg) GetEffectiveDate() *timestamp.Timestamp {
	if x != nil {
		return x.EffectiveDate
	}
	return nil
}

func (x *EventMsg) GetSearchKey1() int64 {
	if x != nil {
		return x.SearchKey1
	}
	return 0
}

func (x *EventMsg) GetSearchKey2() int64 {
	if x != nil {
		return x.SearchKey2
	}
	return 0
}

type PostEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostEventResponse) Reset() {
	*x = PostEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_queue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostEventResponse) ProtoMessage() {}

func (x *PostEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_queue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostEventResponse.ProtoReflect.Descriptor instead.
func (*PostEventResponse) Descriptor() ([]byte, []int) {
	return file_api_queue_proto_rawDescGZIP(), []int{1}
}

type SubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchKey2 int64 `protobuf:"varint,1,opt,name=search_key2,json=searchKey2,proto3" json:"search_key2,omitempty"`
}

func (x *SubscriptionRequest) Reset() {
	*x = SubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_queue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionRequest) ProtoMessage() {}

func (x *SubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_queue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionRequest.ProtoReflect.Descriptor instead.
func (*SubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_api_queue_proto_rawDescGZIP(), []int{2}
}

func (x *SubscriptionRequest) GetSearchKey2() int64 {
	if x != nil {
		return x.SearchKey2
	}
	return 0
}

type SubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscriptionResponse) Reset() {
	*x = SubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_queue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionResponse) ProtoMessage() {}

func (x *SubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_queue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionResponse.ProtoReflect.Descriptor instead.
func (*SubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_api_queue_proto_rawDescGZIP(), []int{3}
}

var File_api_queue_proto protoreflect.FileDescriptor

var file_api_queue_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x70, 0x69, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x02, 0x0a, 0x08, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x75,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x41, 0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x32, 0x22, 0x13, 0x0a, 0x11, 0x50,
	0x6f, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x36, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x6b, 0x65, 0x79, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x32, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x84, 0x01, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x70, 0x69, 0x12, 0x36, 0x0a,
	0x09, 0x50, 0x6f, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x2e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x1a, 0x18, 0x2e, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4d, 0x73, 0x67, 0x30, 0x01, 0x42, 0x52, 0x0a, 0x22, 0x6f, 0x72, 0x67, 0x2e, 0x6b,
	0x69, 0x6c, 0x6c, 0x62, 0x69, 0x6c, 0x6c, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x65, 0x6e, 0x50, 0x01, 0x5a,
	0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x69, 0x6c, 0x6c,
	0x62, 0x69, 0x6c, 0x6c, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x6c, 0x6f, 0x6e, 0x65, 0x2d,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x3b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_queue_proto_rawDescOnce sync.Once
	file_api_queue_proto_rawDescData = file_api_queue_proto_rawDesc
)

func file_api_queue_proto_rawDescGZIP() []byte {
	file_api_queue_proto_rawDescOnce.Do(func() {
		file_api_queue_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_queue_proto_rawDescData)
	})
	return file_api_queue_proto_rawDescData
}

var file_api_queue_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_queue_proto_goTypes = []interface{}{
	(*EventMsg)(nil),             // 0: queue.EventMsg
	(*PostEventResponse)(nil),    // 1: queue.PostEventResponse
	(*SubscriptionRequest)(nil),  // 2: queue.SubscriptionRequest
	(*SubscriptionResponse)(nil), // 3: queue.SubscriptionResponse
	(*timestamp.Timestamp)(nil),  // 4: google.protobuf.Timestamp
}
var file_api_queue_proto_depIdxs = []int32{
	4, // 0: queue.EventMsg.effective_date:type_name -> google.protobuf.Timestamp
	0, // 1: queue.QueueApi.PostEvent:input_type -> queue.EventMsg
	2, // 2: queue.QueueApi.SubscribeEvents:input_type -> queue.SubscriptionRequest
	1, // 3: queue.QueueApi.PostEvent:output_type -> queue.PostEventResponse
	0, // 4: queue.QueueApi.SubscribeEvents:output_type -> queue.EventMsg
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_queue_proto_init() }
func file_api_queue_proto_init() {
	if File_api_queue_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_queue_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_queue_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_queue_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_queue_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_queue_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_queue_proto_goTypes,
		DependencyIndexes: file_api_queue_proto_depIdxs,
		MessageInfos:      file_api_queue_proto_msgTypes,
	}.Build()
	File_api_queue_proto = out.File
	file_api_queue_proto_rawDesc = nil
	file_api_queue_proto_goTypes = nil
	file_api_queue_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QueueApiClient is the client API for QueueApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueueApiClient interface {
	PostEvent(ctx context.Context, in *EventMsg, opts ...grpc.CallOption) (*PostEventResponse, error)
	SubscribeEvents(ctx context.Context, in *SubscriptionRequest, opts ...grpc.CallOption) (QueueApi_SubscribeEventsClient, error)
}

type queueApiClient struct {
	cc grpc.ClientConnInterface
}

func NewQueueApiClient(cc grpc.ClientConnInterface) QueueApiClient {
	return &queueApiClient{cc}
}

func (c *queueApiClient) PostEvent(ctx context.Context, in *EventMsg, opts ...grpc.CallOption) (*PostEventResponse, error) {
	out := new(PostEventResponse)
	err := c.cc.Invoke(ctx, "/queue.QueueApi/PostEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queueApiClient) SubscribeEvents(ctx context.Context, in *SubscriptionRequest, opts ...grpc.CallOption) (QueueApi_SubscribeEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_QueueApi_serviceDesc.Streams[0], "/queue.QueueApi/SubscribeEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &queueApiSubscribeEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type QueueApi_SubscribeEventsClient interface {
	Recv() (*EventMsg, error)
	grpc.ClientStream
}

type queueApiSubscribeEventsClient struct {
	grpc.ClientStream
}

func (x *queueApiSubscribeEventsClient) Recv() (*EventMsg, error) {
	m := new(EventMsg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// QueueApiServer is the server API for QueueApi service.
type QueueApiServer interface {
	PostEvent(context.Context, *EventMsg) (*PostEventResponse, error)
	SubscribeEvents(*SubscriptionRequest, QueueApi_SubscribeEventsServer) error
}

// UnimplementedQueueApiServer can be embedded to have forward compatible implementations.
type UnimplementedQueueApiServer struct {
}

func (*UnimplementedQueueApiServer) PostEvent(context.Context, *EventMsg) (*PostEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostEvent not implemented")
}
func (*UnimplementedQueueApiServer) SubscribeEvents(*SubscriptionRequest, QueueApi_SubscribeEventsServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeEvents not implemented")
}

func RegisterQueueApiServer(s *grpc.Server, srv QueueApiServer) {
	s.RegisterService(&_QueueApi_serviceDesc, srv)
}

func _QueueApi_PostEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueApiServer).PostEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/queue.QueueApi/PostEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueApiServer).PostEvent(ctx, req.(*EventMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueueApi_SubscribeEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscriptionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QueueApiServer).SubscribeEvents(m, &queueApiSubscribeEventsServer{stream})
}

type QueueApi_SubscribeEventsServer interface {
	Send(*EventMsg) error
	grpc.ServerStream
}

type queueApiSubscribeEventsServer struct {
	grpc.ServerStream
}

func (x *queueApiSubscribeEventsServer) Send(m *EventMsg) error {
	return x.ServerStream.SendMsg(m)
}

var _QueueApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "queue.QueueApi",
	HandlerType: (*QueueApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostEvent",
			Handler:    _QueueApi_PostEvent_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeEvents",
			Handler:       _QueueApi_SubscribeEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/queue.proto",
}
